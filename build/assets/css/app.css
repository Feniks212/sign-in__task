/* http://meyerweb.com/eric/tools/css/reset/
   v2.0-modified | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* make sure to set some focus styles for accessibility */
:focus {
  outline: 0; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration,
input[type=search]::-webkit-search-results-button,
input[type=search]::-webkit-search-results-decoration {
  -webkit-appearance: none;
  -moz-appearance: none; }

input[type=search] {
  -webkit-appearance: none;
  -moz-appearance: none;
  -webkit-box-sizing: content-box;
  box-sizing: content-box; }

textarea {
  overflow: auto;
  vertical-align: top;
  resize: vertical; }

/**
 * Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 */
audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
  max-width: 100%; }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address styling not present in IE 7/8/9, Firefox 3, and Safari 4.
 * Known issue: no IE 6 support.
 */
[hidden] {
  display: none; }

/**
 * 1. Correct text resizing oddly in IE 6/7 when body `font-size` is set using
 *    `em` units.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-size: 100%;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/**
 * 1. Remove border when inside `a` element in IE 6/7/8/9 and Firefox 3.
 * 2. Improve image quality when scaled in IE 7.
 */
img {
  border: 0;
  /* 1 */
  -ms-interpolation-mode: bicubic;
  /* 2 */ }

/**
 * Address margin not present in IE 6/7/8/9, Safari 5, and Opera 11.
 */
figure {
  margin: 0; }

/**
 * Correct margin displayed oddly in IE 6/7.
 */
form {
  margin: 0; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct color not being inherited in IE 6/7/8/9.
 * 2. Correct text not wrapping in Firefox 3.
 * 3. Correct alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  white-space: normal;
  /* 2 */
  *margin-left: -7px;
  /* 3 */ }

/**
 * 1. Correct font size not being inherited in all browsers.
 * 2. Address margins set differently in IE 6/7, Firefox 3+, Safari 5,
 *    and Chrome.
 * 3. Improve appearance and consistency in all browsers.
 */
button,
input,
select,
textarea {
  font-size: 100%;
  /* 1 */
  margin: 0;
  /* 2 */
  vertical-align: baseline;
  /* 3 */
  *vertical-align: middle;
  /* 3 */ }

/**
 * Address Firefox 3+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 6+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 * 4. Remove inner spacing in IE 7 without affecting normal text inputs.
 *    Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
  *overflow: visible;
  /* 4 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * 1. Address box sizing set to content-box in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 * 3. Remove excess padding in IE 7.
 *    Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
  *height: 13px;
  /* 3 */
  *width: 13px;
  /* 3 */ }

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Remove inner padding and border in Firefox 3+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * 1. Remove default vertical scrollbar in IE 6/7/8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

html,
button,
input,
select,
textarea {
  color: #222; }

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none; }

::selection {
  background: #b3d4fc;
  text-shadow: none; }

img {
  vertical-align: middle; }

fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

textarea {
  resize: vertical; }

.chromeframe {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

@font-face {
  font-family: 'Helvetica Neue';
  src: url("../fonts/HelveticaNeue.eot");
  src: url("../fonts/HelveticaNeue.eot?#iefix") format("embedded-opentype"), url("../fonts/HelveticaNeue.woff2") format("woff2"), url("../fonts/HelveticaNeue.woff") format("woff"), url("../fonts/HelveticaNeue.ttf") format("truetype"), url("../fonts/HelveticaNeue.svg#HelveticaNeue") format("svg");
  font-weight: normal;
  font-style: normal; }

body {
  margin: 0;
  font-family: 'Helvetica Neue'; }

/*----------------
---  Preloader ---
----------------*/
.preloader {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: 1000;
  text-align: center;
  background-color: #e4b5c7;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
  -webkit-perspective: 1000;
  -webkit-transition: all 0.6s;
  -o-transition: all 0.6s;
  transition: all 0.6s;
  opacity: 1; }
  .preloader > div {
    position: absolute;
    top: 50%;
    left: 50%;
    margin-top: -9px;
    margin-left: 13px;
    width: 18px;
    height: 18px;
    background-color: #ddd;
    border-radius: 100%;
    display: inline-block;
    -webkit-animation: bouncedelay 1.4s infinite ease-in-out;
    animation: bouncedelay 1.4s infinite ease-in-out;
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both; }
  .preloader .preloader__scale-ripple {
    width: 50px;
    height: 50px;
    margin-left: -25px;
    margin-top: -25px;
    background-color: transparent !important;
    -webkit-animation: none;
    animation: none; }
    .preloader .preloader__scale-ripple > div {
      position: absolute;
      top: 0;
      width: 50px;
      height: 50px;
      border-radius: 100%;
      border: 2px solid #ddd;
      -webkit-animation: ball-scale-ripple-multiple 1.4s 0s infinite cubic-bezier(0.21, 0.53, 0.56, 0.8);
      animation: ball-scale-ripple-multiple 1.4s 0s infinite cubic-bezier(0.21, 0.53, 0.56, 0.8); }
      .preloader .preloader__scale-ripple > div:nth-child(0) {
        -webkit-animation-delay: -.8s;
        animation-delay: -.8s; }
      .preloader .preloader__scale-ripple > div:nth-child(1) {
        -webkit-animation-delay: -.6s;
        animation-delay: -.6s; }
      .preloader .preloader__scale-ripple > div:nth-child(2) {
        -webkit-animation-delay: -.4s;
        animation-delay: -.4s; }
      .preloader .preloader__scale-ripple > div:nth-child(3) {
        -webkit-animation-delay: -.2s;
        animation-delay: -.2s; }

.preloader.hide {
  opacity: 0;
  z-index: -1; }

@-webkit-keyframes ball-scale-ripple-multiple {
  0% {
    -webkit-transform: scale(0.1);
    transform: scale(0.1);
    opacity: 1; }
  70% {
    -webkit-transform: scale(1);
    transform: scale(1);
    opacity: .7; }
  100% {
    opacity: 0; } }

@keyframes ball-scale-ripple-multiple {
  0% {
    -webkit-transform: scale(0.1);
    transform: scale(0.1);
    opacity: 1; }
  70% {
    -webkit-transform: scale(1);
    transform: scale(1);
    opacity: .7; }
  100% {
    opacity: 0; } }

/*----------------
-  End Preloader -
----------------*/
.sign-in {
  background: url(../img/bc.jpg) no-repeat center center;
  background-attachment: fixed;
  background-size: cover;
  height: 100vh;
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }
  .sign-in::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #000;
    opacity: 0.5; }
  .sign-in .sign-in__content {
    position: relative;
    background: inherit;
    width: 540px;
    min-height: 374px;
    border-radius: 5px;
    overflow: hidden;
    padding: 30px; }
    .sign-in .sign-in__content a {
      text-decoration: none;
      cursor: pointer; }
    .sign-in .sign-in__content .sign-in__content__back {
      position: relative;
      font-size: 10px;
      color: #fff;
      text-transform: uppercase;
      z-index: 1; }
    .sign-in .sign-in__content form {
      position: relative;
      z-index: 1;
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: center;
          -ms-flex-align: center;
              align-items: center;
      -webkit-box-pack: center;
          -ms-flex-pack: center;
              justify-content: center;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
          -ms-flex-direction: column;
              flex-direction: column; }
      .sign-in .sign-in__content form .form__user-img {
        margin: auto;
        text-align: center;
        width: 97px;
        height: 97px;
        border-radius: 50%;
        overflow: hidden;
        margin-bottom: 22px;
        position: relative; }
        .sign-in .sign-in__content form .form__user-img img {
          position: absolute;
          top: 0;
          bottom: 0;
          left: 0;
          right: 0;
          margin: auto;
          width: 100%; }
      .sign-in .sign-in__content form > label {
        position: relative;
        min-width: 369px;
        min-height: 48px;
        border-radius: 25px;
        margin-bottom: 15px;
        text-align: center;
        overflow: hidden;
        border: 1px solid rgba(255, 255, 255, 0.4); }
        .sign-in .sign-in__content form > label input {
          width: 100%;
          min-height: 48px;
          resize: vertical;
          background: none;
          border: 0;
          outline: none;
          color: #fff;
          text-align: center;
          -webkit-transition: all 0.2s;
          -o-transition: all 0.2s;
          transition: all 0.2s;
          -webkit-box-shadow: none;
          box-shadow: none; }
          .sign-in .sign-in__content form > label input::-webkit-input-placeholder {
            color: rgba(255, 255, 255, 0.4); }
          .sign-in .sign-in__content form > label input::-moz-placeholder {
            color: rgba(255, 255, 255, 0.4); }
          .sign-in .sign-in__content form > label input:-ms-input-placeholder {
            color: rgba(255, 255, 255, 0.4); }
          .sign-in .sign-in__content form > label input::-ms-input-placeholder {
            color: rgba(255, 255, 255, 0.4); }
          .sign-in .sign-in__content form > label input::placeholder {
            color: rgba(255, 255, 255, 0.4); }
          .sign-in .sign-in__content form > label input:focus {
            background-color: #fff;
            color: #000000; }
            .sign-in .sign-in__content form > label input:focus::-webkit-input-placeholder {
              color: rgba(0, 0, 0, 0.4); }
            .sign-in .sign-in__content form > label input:focus::-moz-placeholder {
              color: rgba(0, 0, 0, 0.4); }
            .sign-in .sign-in__content form > label input:focus:-ms-input-placeholder {
              color: rgba(0, 0, 0, 0.4); }
            .sign-in .sign-in__content form > label input:focus::-ms-input-placeholder {
              color: rgba(0, 0, 0, 0.4); }
            .sign-in .sign-in__content form > label input:focus::placeholder {
              color: rgba(0, 0, 0, 0.4); }
      .sign-in .sign-in__content form .form__interaction-buttons {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-align: center;
            -ms-flex-align: center;
                align-items: center;
        -webkit-box-pack: justify;
            -ms-flex-pack: justify;
                justify-content: space-between;
        font-size: 16px;
        color: #fff;
        margin-bottom: 23px; }
        .sign-in .sign-in__content form .form__interaction-buttons a {
          color: #fff;
          border-bottom: 1px solid rgba(255, 255, 255, 0.3); }
      .sign-in .sign-in__content form input[type="submit"] {
        text-transform: uppercase;
        background: transparent;
        border: 1px solid rgba(255, 255, 255, 0.4);
        border-radius: 25px;
        color: #fff;
        font-size: 12px;
        padding: 16px 54px;
        -webkit-transition: all 0.2s;
        -o-transition: all 0.2s;
        transition: all 0.2s; }
        .sign-in .sign-in__content form input[type="submit"]:hover {
          background: #fff;
          color: #000; }
    .sign-in .sign-in__content::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: #F0F0F0;
      z-index: 1;
      opacity: 0.2; }
  .sign-in .sign-in__content__blur {
    background: inherit;
    position: absolute;
    top: -50%;
    left: -50%;
    height: 200%;
    width: 200%;
    -webkit-filter: blur(10px);
    filter: blur(10px);
    z-index: 0; }

/*-------------------
--  Style checkbox --
-------------------*/
[type="checkbox"]:checked,
[type="checkbox"]:not(:checked) {
  position: absolute;
  left: -9999px; }

[type="checkbox"]:checked + label,
[type="checkbox"]:not(:checked) + label {
  position: relative;
  padding-left: 53.5px;
  margin-right: 87px;
  cursor: pointer;
  line-height: 24px;
  display: inline-block; }

[type="checkbox"]:checked + label:before,
[type="checkbox"]:not(:checked) + label:before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  width: 42px;
  height: 22px;
  border: 1px solid #f0f0f0;
  background: transparent;
  border-radius: 25px; }

[type="checkbox"]:checked + label:after,
[type="checkbox"]:not(:checked) + label:after {
  content: '';
  width: 22px;
  height: 16px;
  border-radius: 25px;
  background: #fff;
  position: absolute;
  top: 4px;
  left: 17px;
  -webkit-transition: all 0.2s ease;
  -o-transition: all 0.2s ease;
  transition: all 0.2s ease; }

[type="checkbox"]:not(:checked) + label:after {
  top: 4px;
  left: 5px;
  background: rgba(255, 255, 255, 0.3); }

/*----------------------
--  EndStyle checkbox --
----------------------*/
/*----------------------------
--  Style Valid and Invalid --
----------------------------*/
label > span {
  opacity: 0;
  position: absolute;
  top: 9px;
  right: 10px;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  line-height: 28px;
  z-index: 1;
  color: #fff; }

#sign-in label > span.invalid {
  background-color: #e74c3c;
  opacity: 1; }
  #sign-in label > span.invalid::after {
    content: '!'; }
  #sign-in label > span.invalid + input {
    color: #e74c3c;
    background-color: #fff; }
    #sign-in label > span.invalid + input::-webkit-input-placeholder {
      color: rgba(0, 0, 0, 0.4); }
    #sign-in label > span.invalid + input::-moz-placeholder {
      color: rgba(0, 0, 0, 0.4); }
    #sign-in label > span.invalid + input:-ms-input-placeholder {
      color: rgba(0, 0, 0, 0.4); }
    #sign-in label > span.invalid + input::-ms-input-placeholder {
      color: rgba(0, 0, 0, 0.4); }
    #sign-in label > span.invalid + input::placeholder {
      color: rgba(0, 0, 0, 0.4); }

label > span.valid {
  background: url(../img/check.png) no-repeat center center;
  opacity: 1; }

.sign-in .sign-in__content form input[type="submit"]:disabled {
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: rgba(255, 255, 255, 0.2); }
  .sign-in .sign-in__content form input[type="submit"]:disabled:hover {
    background: none;
    color: rgba(255, 255, 255, 0.2); }

/*--------------------------------
--  End Style Valid and Invalid --
--------------------------------*/
/*---------------------
--  Responsive Style --
---------------------*/
@media (max-width: 630px) {
  .sign-in .sign-in__content {
    margin: 10px;
    width: 100%;
    min-height: 374px; } }

@media (max-width: 434px) {
  .sign-in .sign-in__content {
    padding: 20px 10px; }
  .sign-in .sign-in__content form > label {
    min-width: 100%; }
  .sign-in .sign-in__content form .form__interaction-buttons {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column; }
  .sign-in__content .form__interaction-buttons label {
    margin-right: 0;
    margin-bottom: 10px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
